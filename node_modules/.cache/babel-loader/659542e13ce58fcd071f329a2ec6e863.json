{"ast":null,"code":"var _jsxFileName = \"/Users/danielluzardo/bot-o-mat/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport Bot from './components/Bot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  const [list, setList] = useState([]);\n  const [error, setError] = useState(false);\n\n  const createBot = () => {\n    //Prevention of bot not having name or type\n    if (name === \"\" || type === \"\") {\n      setError(true);\n      return;\n    }\n\n    setList(list.concat( /*#__PURE__*/_jsxDEV(Bot, {\n      name: name,\n      type: type,\n      id: id\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 28\n    }, this)));\n    setName(\"\");\n    setId(id + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onChange: e => {\n        setType(e.target.value);\n        console.log(e.target.value);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Unipedal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Bipedal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Quadrupedal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Arachnid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Radial\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Aeronautical\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputName\",\n        value: name,\n        placeholder: \"Enter Bot Name\",\n        onChange: e => {\n          setName(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"botButton\",\n        onClick: () => {\n          createBot();\n          console.log(type + \" \" + name);\n        },\n        children: \"Create Bot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"makeBot\",\n        children: list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"noiPAQb7K2G8uQU9pPUnGri+SXs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/danielluzardo/bot-o-mat/src/App.js"],"names":["React","useState","useEffect","Bot","App","name","setName","type","setType","id","setId","list","setList","error","setError","createBot","concat","e","target","value","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,kBAAhB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,EAAD,EAAKC,KAAL,IAAcT,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,KAAD,CAAlC;;AAIA,QAAMc,SAAS,GAAG,MAAM;AACtB;AAEA,QAAIV,IAAI,KAAK,EAAT,IAAeE,IAAI,KAAK,EAA5B,EAAgC;AAC9BO,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACA;AACH;;AACGF,IAAAA,OAAO,CAACD,IAAI,CAACK,MAAL,eAAa,QAAC,GAAD;AAAK,MAAA,IAAI,EAAEX,IAAX;AAAiB,MAAA,IAAI,EAAEE,IAAvB;AAA6B,MAAA,EAAE,EAAEE;AAAjC,OAA0CA,EAA1C;AAAA;AAAA;AAAA;AAAA,YAAb,CAAD,CAAP;AAEAH,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAI,IAAAA,KAAK,CAACD,EAAE,GAAC,CAAJ,CAAL;AAEH,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,QAAQ,EAAGQ,CAAD,IAAO;AAACT,QAAAA,OAAO,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AAAyBC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAC,CAACC,MAAF,CAASC,KAArB;AAA6B,OAA7E;AAAA,6BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAA,8BACA;AAAO,QAAA,SAAS,EAAC,WAAjB;AAA6B,QAAA,KAAK,EAAEd,IAApC;AAA0C,QAAA,WAAW,EAAC,gBAAtD;AAAuE,QAAA,QAAQ,EAAIY,CAAD,IAAO;AAACX,UAAAA,OAAO,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AAAwB;AAAlH;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAE,MAAM;AAACJ,UAAAA,SAAS;AAAIK,UAAAA,OAAO,CAACC,GAAR,CAAYd,IAAI,GAAG,GAAP,GAAaF,IAAzB;AAA+B,SAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA,eAKA;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,kBACKM;AADL;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAjDQP,G;;KAAAA,G;AAmDT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport Bot from './components/Bot';\n\nfunction App() {\n\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  const [list, setList] = useState([]);\n  const [error, setError] = useState(false);\n\n\n\n  const createBot = () => {\n    //Prevention of bot not having name or type\n    \n    if (name === \"\" || type === \"\") {\n      setError(true);\n      return;\n  }\n      setList(list.concat( <Bot name={name} type={type} id={id} key={id}/>));\n\n      setName(\"\");\n      setId(id+1);\n    \n  } \n\n  return (\n    <div className=\"App\">\n      <div onChange={(e) => {setType(e.target.value); console.log(e.target.value);}}> \n        <select>\n          <option>Unipedal</option>\n          <option>Bipedal</option>\n          <option>Quadrupedal</option>\n          <option>Arachnid</option>\n          <option>Radial</option>\n          <option>Aeronautical</option>\n        </select>\n      </div>\n      <div >\n      <input className=\"inputName\" value={name} placeholder=\"Enter Bot Name\" onChange={ (e) => {setName(e.target.value)}} />\n      <br></br>\n      <button className=\"botButton\" onClick={() => {createBot(); console.log(type + \" \" + name)}} >Create Bot</button>\n\n      <div className=\"makeBot\">\n          {list}\n      </div>\n      \n      \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}